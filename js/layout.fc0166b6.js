(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["layout"],{"13b0":function(l,o,n){},"28fb":function(l,o,n){"use strict";var t=n("13b0"),c=n.n(t);c.a},"2d1a":function(l,o,n){"use strict";n.r(o);var t=function(){var l=this,o=l.$createElement,n=l._self._c||o;return n("component-view",[n("flexbox-grid",{attrs:{id:"flex"}}),n("responsive",{attrs:{id:"responsive"}})],1)},c=[],s=n("2b0e"),e=function(){var l=this,o=l.$createElement,n=l._self._c||o;return n("container",[n("h2",{staticClass:"title"},[l._v(" Flexbox grid ")]),n("p",[l._v("Layout includes flexbox based responsive grid system with 12 columns.")]),n("columns",l._l(12,(function(l){return n("column",{key:l,attrs:{col:"1"}},[n("div",{staticClass:"bg-primary block"})])})),1),n("columns",[n("column",{attrs:{col:"12"}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=12 (100%) ")])]),n("column",{attrs:{col:"9"}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=9 (75%) ")])]),n("column",{attrs:{col:"6"}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=6 (50%) ")])])],1),n("columns",[n("column",{attrs:{col:"3"}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=3 (25%) ")])])],1),n("prism",{attrs:{language:"html",code:l.basic}}),n("p",[l._v(" Add the "),n("code",[l._v("columns")]),l._v(" component to a "),n("code",[l._v("container")]),l._v(". And add any element(s) you want with the "),n("code",[l._v("column")]),l._v(" component. These columns will take up the space equally. You can specific the width of each column by adding "),n("kbd",[l._v("col")]),l._v(" property ")]),n("h5",{staticClass:"subtitle"},[l._v(" Gapless columns ")]),n("p",[l._v("You can set "),n("kbd",[l._v("gapless")]),l._v(" property of "),n("code",[l._v("columns")]),l._v(" component to have gapless columns.")]),n("columns",{attrs:{gapless:""}},[n("column",{attrs:{col:"6"}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=6 ")])]),n("column",{attrs:{col:"6"}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=6 ")])])],1),n("prism",{attrs:{language:"html",code:l.gapless}}),n("h5",{staticClass:"subtitle"},[l._v(" One line columns ")]),n("p",[l._v(" By default, Spectre grid has multi-line flexbox enabled. You can set "),n("kbd",[l._v("oneline")]),l._v(" property of "),n("code",[l._v("columns")]),l._v(" to make all its child columns positioned in one line ")]),n("columns",{attrs:{oneline:""}},[n("column",{attrs:{col:"8"}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=8 ")])]),n("column",{attrs:{col:"12"}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=12 ")])])],1),n("prism",{attrs:{language:"html",code:l.oneline}}),n("h5",{staticClass:"subtitle",attrs:{id:"offset"}},[l._v(" Grid offset ")]),n("p",[l._v(" The Flexbox grid provides margin auto utilities to set offset. There are "),n("kbd",[l._v("mx")]),l._v(", "),n("kbd",[l._v("ml")]),l._v(" and "),n("kbd",[l._v("mr")]),l._v(" properties to set margins between columns without using empty columns. ")]),n("columns",[n("column",{attrs:{col:"2"}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=2 ")])]),n("column",{attrs:{col:"4",mx:""}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=4 mx ")])])],1),n("columns",[n("column",{attrs:{col:"2"}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=2 ")])]),n("column",{attrs:{col:"4",ml:""}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=4 ml ")])])],1),n("columns",[n("column",{attrs:{col:"4",ml:""}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=4 ml ")])]),n("column",{attrs:{col:"2"}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=2 ")])])],1),n("columns",[n("column",{attrs:{col:"4",mx:""}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=4 mx ")])]),n("column",{attrs:{col:"2"}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=2 ")])])],1),n("columns",[n("column",{attrs:{col:"4",mr:""}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=4 mr ")])]),n("column",{attrs:{col:"2"}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=2 ")])])],1),n("columns",[n("column",{attrs:{col:"4",mx:""}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=4 mx ")])])],1),n("prism",{attrs:{language:"html",code:l.gridoffset}}),n("h5",{staticClass:"subtitle"},[l._v(" Grid nesting ")]),n("p",[l._v(" To nest grids, add the new "),n("code",[l._v("<columns>")]),l._v(" and "),n("code",[l._v("<column>")]),l._v(" structure within an existing column. ")]),n("columns",[n("column",{attrs:{col:"6"}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=6 ")]),n("columns",[n("column",{attrs:{col:"6"}},[n("div",{staticClass:"bg-primary block"},[l._v(" col=6 ")])]),n("column",{attrs:{col:"6"}},[n("div",{staticClass:"bg-primary block"},[l._v(" col=6 ")])])],1)],1),n("column",{attrs:{col:"6"}},[n("div",{staticClass:"bg-gray block"},[l._v(" col=6 ")])])],1),n("prism",{attrs:{language:"html",code:l.nested}})],1)},a=[],i=s["default"].extend({data:function(){return{basic:'<container>\n\n  <columns>\n    <column v-for="i in 12" :key="i" col="1">\n      ...\n    </column>\n  </columns>\n\n  <columns>\n    <column col=12>...</column>\n    <column col=9>...</column>\n    <column col=6>...</column>\n  </columns>\n\n  <columns>\n    <column col=3>...</column>\n  </columns>\n\n</container>',gapless:"<columns gapless>\n  <column col=6>...</column>\n  <column col=6>...</column>\n</columns>",oneline:"<columns oneline>\n  <column col=8>...</column>\n  <column col=12>...</column>\n</columns>",gridoffset:"<columns>\n  <column col=2>...</column>\n  <column col=4 mx>...</column>\n</columns>\n<columns>\n  <column col=2>...</column>\n  <column col=4 ml>...</column>\n</columns>\n<columns>\n  <column col=4 ml>...</column>\n  <column col=2>...</column>\n</columns>\n<columns>\n  <column col=4 mx>...</column>\n  <column col=2>...</column>\n</columns>\n<columns>\n  <column col=4 mr>...</column>\n  <column col=2>...</column>\n</columns>\n<columns>\n  <column col=4 mx>...</column>\n</columns>",nested:"<columns>\n  <column col=6>\n    ...\n    <columns>\n      <column col=6>\n        \x3c!-- nested blue tile --\x3e\n      </column>\n      <column col=6>\n        \x3c!-- nested blue tile --\x3e\n      </column>\n    </columns>\n  </column>\n  <column col=6>\n    ...\n  </column>\n</columns>"}}}),m=i,r=n("2877"),u=Object(r["a"])(m,e,a,!1,null,null,null),d=u.exports,v=function(){var l=this,o=l.$createElement,n=l._self._c||o;return n("container",[n("h2",{staticClass:"subtitle"},[l._v("Responsive")]),n("p",[l._v(" Spectre provides a responsive layout grid system and responsive visibility utilities. ")]),n("columns",[n("column",{attrs:{col:"10",lg:"8",md:"6",sm:"4"}},[n("div",{staticClass:"bg-gray block"},[l._v("col=10 "),n("br"),l._v(" lg=8 "),n("br"),l._v(" md=6 "),n("br"),l._v(" sm=4")])]),n("column",{attrs:{col:"2",lg:"4",md:"6",sm:"8"}},[n("div",{staticClass:"bg-gray block"},[l._v("col=2 "),n("br"),l._v(" lg=4 "),n("br"),l._v(" md=6 "),n("br"),l._v(" sm=8")])])],1),n("prism",{attrs:{language:"html",code:l.basic}}),n("p",[l._v(" There are "),n("kbd",[l._v("xs")]),l._v(", "),n("kbd",[l._v("sm")]),l._v(", "),n("kbd",[l._v("md")]),l._v(", "),n("kbd",[l._v("lg")]),l._v(" and "),n("kbd",[l._v("xl")]),l._v(" props for flexible grid across mobile, tablet and desktop viewport usage ")]),n("ul",[n("li",[n("kbd",[l._v("xs")]),l._v(" apply to window width smaller than or equal to "),n("strong",[l._v("480px")]),l._v(".")]),n("li",[n("kbd",[l._v("sm")]),l._v(" apply to window width smaller than or equal to "),n("strong",[l._v("600px")]),l._v(".")]),n("li",[n("kbd",[l._v("md")]),l._v(" apply to window width smaller than or equal to "),n("strong",[l._v("840px")]),l._v(".")]),n("li",[n("kbd",[l._v("lg")]),l._v(" apply to window width smaller than or equal to "),n("strong",[l._v("960px")]),l._v(".")]),n("li",[n("kbd",[l._v("xl")]),l._v(" apply to window width smaller than or equal to "),n("strong",[l._v("1280px")]),l._v(".")]),n("li",[n("kbd",[l._v("col")]),l._v(" apply to all window width, including the width wider than "),n("strong",[l._v("1280px")]),l._v(".")])]),n("h3",{staticClass:"subtitle"},[l._v("Responsive container")]),n("p",[l._v(" The responsive layout also provides fixed-width containers. Use "),n("kbd",[l._v("grid")]),l._v(" property of "),n("code",[l._v("<container>")]),l._v(" component for a fixed-width container with the specific max-width ")]),n("ul",[n("li",[n("b",[l._v("xs")]),l._v(" is equal to "),n("strong",[l._v("480px")]),l._v(".")]),n("li",[n("b",[l._v("sm")]),l._v(" is equal to "),n("strong",[l._v("600px")]),l._v(".")]),n("li",[n("b",[l._v("md")]),l._v(" is equal to "),n("strong",[l._v("840px")]),l._v(".")]),n("li",[n("b",[l._v("lg")]),l._v(" is equal to "),n("strong",[l._v("960px")]),l._v(".")]),n("li",[n("b",[l._v("xl")]),l._v(" is equal to "),n("strong",[l._v("1280px")]),l._v(".")])]),n("prism",{attrs:{language:"html",code:l.responsiveContainer}})],1)},p=[],_=s["default"].extend({data:function(){return{basic:"<columns>\n  <column col=10 lg=8 md=6 sm=4>...</column>\n  <column col=2 lg=4 md=6 sm=8>...</column>\n</columns>",responsiveContainer:'\x3c!-- 100% width container with max-width set to 960px --\x3e\n<container grid="lg">\n  <columns>\n    ...\n  </columns>\n</container>'}}}),b=_,g=Object(r["a"])(b,v,p,!1,null,null,null),h=g.exports,x=[{name:"Container",props:{grid:{description:"Makes a container as fixed-width",type:"String",accepted:"xs, sm, md, lg, xl"}}},{name:"Columns",props:{oneline:{description:"Arranges all columns in one row regardless of size",default:!1,type:"Boolean"},gapless:{description:"Removes indentation between columns",default:!1,type:"String"}}},{name:"Column",props:{col:{description:"apply to all window width, including the width wider than 1280px",type:"Number",accepted:"1-12"},xs:{description:"apply to window width smaller than or equal to 480px",type:"Number",accepted:"1-12"},sm:{description:"apply to window width smaller than or equal to 600px",type:"Number",accepted:"1-12"},md:{description:"apply to window width smaller than or equal to 840px",type:"Number",accepted:"1-12"},lg:{description:"apply to window width smaller than or equal to 960px",type:"Number",accepted:"1-12"},xl:{description:"apply to window width smaller than or equal to 1280px",type:"Number",accepted:"1-12"},mx:{description:"Auto margin from left and right side",type:"Boolean",default:!1},ml:{description:"Auto margin from left side",type:"Boolean",default:!1},mr:{description:"Auto margin from right side",type:"Boolean",default:!1}}}],y=s["default"].extend({name:"LayoutPage",components:{FlexboxGrid:d,Responsive:h},data:function(){return{props:x}}}),w=y,f=(n("28fb"),Object(r["a"])(w,t,c,!1,null,"371dbd47",null));o["default"]=f.exports}}]);